var myApp=new Framework7({precompileTemplates:true,template7Pages:true,popoverCloseByOutside:false,modalTitle:"",upscroller:{text:"맨 위로"},onAjaxStart:function(xhr){myApp.showIndicator()},onAjaxComplete:function(xhr){myApp.hideIndicator()}});var $$=Dom7;var tourSteps=[{step:0,header:"퀵 메뉴",message:"현재위치 확인, 관광명소 찾기, 트래킹, 지도 초기화 기능을 빠르게 사용할 수 있는 도구를 제공합니다.",element:"#mapSpeedDial",action:function(){if(!$$("#mapSpeedDial").hasClass("speed-dial-opened")){$$("#mapDial").click()}}},{step:1,header:"현재위치",message:"지도에 현재위치(마커)를 표시합니다. 마커를 지우시려면 현재위치를 비활성화 하시면 됩니다.",element:"#btnCurrentLocation"},{step:2,header:"관광명소 찾기",message:"관광명소를 빠르게 찾아 갈수 있도록 검색 목록을 제공하며 관광명소 선택시 빠른 길 안내를 제공합니다.",element:"#btnDestinationSearch"},{step:3,header:"지도 초기화",message:"지도에 그려진 길찾기, 따릉이, 출발지, 도착지 등을 지웁니다. 단, 사용자 위치 마커는 지워지지 않습니다.",element:"#btnCleanMap",action:function(){if(!$$("#mapSpeedDial").hasClass("speed-dial-opened")){$$("#mapDial").click()}}},{step:4,header:"위치추적",message:"스위치를 ON 하시면 현재 위치를 추적합니다. 위치추적은 현재위치 기능이 활성화 되어 있어야합니다.",element:"#trackingLabel",action:function(){if($$("#mapSpeedDial").hasClass("speed-dial-opened")){$$("#mapDial").click()}}},{step:5,header:"길 안내 상세보기",message:"출발지에서 목적지까지의 총 거리와 시간 그리고 경로 100m 반경 내에 착한업소 목록을 확인 할 수 있습니다.",element:"#btnLeftMenu",action:function(){myApp.showTab("#mapView")}},{step:6,header:"출발지, 도착지 검색",message:"주소, 명칭을 입력하여 출발지 도착지를 검색 할 수있습니다.",element:"#txtStart",action:function(){myApp.showTab("#contentView")}},{step:7,header:"최근이용 검색",message:"최근에 이용한 경로를 확인 할 수있습니다.",element:"#routeSearchList"}];var tourguide=myApp.tourguide(tourSteps,{previousButton:true,nextButtonText:"다음",previousButtonText:"이전",endTourButtonText:"완료"});Framework7.globals={position:{},routeStart:{},routeEnd:{},directRouteStart:{},directRouteEnd:{},IMAGE_URL:"http://wekits.iptime.org/images/"};Template7.module=function(){return{init:function(){for(var index in Template7.module){if(typeof Template7.module[index]!=="function"){Template7.module[index].init()}}runApplication(this);setInterval(function(){var $$li_list=$$("#tipHeader li");var $li_listLength=$$li_list.length;var $$first_li=$$('#tipHeader li[style*="display: block"]');$$li_list.css("display","none");if(parseInt($$first_li.data("seq"))===$li_listLength){$$("#tipHeader li").eq(0).css("display","block")}else{$$first_li.next().css("display","block")}},2500)}}}();var runApplication=function(moduls){~function appInit(){initView();initPage();initComponent()}();function initView(){var mapView=myApp.addView("#mapView",{name:"mapView",domCache:true});var contentView=myApp.addView("#contentView",{name:"contentView",dynamicNavbar:true,domCache:true});var bikeView=myApp.addView("#bikeView",{name:"bikeView",domCache:true});var tourView=myApp.addView("#tourView",{name:"tourView",dynamicNavbar:true,domCache:true});var settingView=myApp.addView("#settingView",{name:"settingView",dynamicNavbar:true,domCache:true});myApp.onPageInit("tourItemIndex",function(page){Template7.module.db.selectVisitById(page.context.id,function(visit){if(visit){$$(page.container).find("#btnRemoveVisit").show()}else{$$(page.container).find("#btnAddVisit").show()}});$$(page.container).on("click","#btnAddVisit",function(){var $$element=$$(this);var name=$$(this).data("name");Template7.module.db.insertVisit({id:$$element.data("id"),lon:$$element.data("lon"),lat:$$element.data("lat"),name:name},function(){$$(myApp.getCurrentView().container).find("#btnRemoveVisit").show();$$(page.container).find("#btnAddVisit").hide()})});$$(page.container).on("click","#btnRemoveVisit",function(){var $$element=$$(this);var id=$$element.data("id");var name=$$element.data("name");Template7.module.db.deleteVisitById(id,function(){$$(myApp.getCurrentView().container).find("#btnRemoveVisit").hide();$$(page.container).find("#btnAddVisit").show()})});$$(page.container).on("click","#btnTourLocation",function(){var lon=$$(this).data("lon");var lat=$$(this).data("lat");var name=$$(this).data("name");var lonlat=new OpenLayers.LonLat(lon,lat);Template7.module.map.moveTo(lonlat.transform("EPSG:4326",Template7.module.map.getMap().getProjection()),18,name);myApp.showTab("#mapView")});$$(page.container).on("click","#btnTourRoute",function(){var $this=$$(this);var lon=$this.data("lon");var lat=$this.data("lat");var name=$this.data("name");myApp.confirm(name+"까지 가는길을 검색하겠습니까?",function(){Template7.module.rest.daumCoord2addr({lon:Framework7.globals.position.lon,lat:Framework7.globals.position.lat},function(data){var start={y:Framework7.globals.position.lat,x:Framework7.globals.position.lon,name:data.old.name+" (현재위치)"};var end={y:lat,x:lon,name:name+" (관광명소)"};Template7.module.util.route(start,end,"tour",function(data){Template7.module.util.showBikePath({sDistance:data.startDistance,bDistance:data.bikeDistance,eDistance:data.endDistance,startPoint:start,endPoint:end,passList:data.passList||null});myApp.showTab("#mapView")})})})})});myApp.onPageInit("myRouteIndex",function(page){function initMyRouteIndex(){$$("#dbRouteResult ul.reoute-datas").children().remove();Template7.module.db.selectRoutes(function(routes){if(routes.length<1){$$("#dbRouteResult ul.empty-route-datas").show();$$("#dbRouteResult ul.reoute-datas").show()}else{$$("#dbRouteResult ul.empty-route-datas").hide();$$("#dbRouteResult ul.reoute-datas").show()}var html="";for(var i=0,len=routes.length;i<len;i++){var route=routes[i];var type=route.route_type;switch(type){case"bike":route.imageUrl="./images/icons/bike.png";route.title="따릉이 대여소";break;case"tour":route.imageUrl="./images/icons/photo-camera.png";route.title="관광명소";break;case"park":route.imageUrl="./images/icons/park.png";route.title="공원";break;case"nomal":default:route.imageUrl="./images/icons/route.png";route.title="길찾기";break}html+=Template7.templates.dbRouteTemplate($$.extend({},{seq:i+1},route))}$$("#dbRouteResult ul.reoute-datas").append(html)})}$$(page.container).on("click",".db-route-item",function(){var id=$$(this).data("id");Template7.module.db.selectRouteById(id,function(route){var start={y:route.start_lat,x:route.start_lon,name:route.start_name};var end={y:route.end_lat,x:route.end_lon,name:route.end_name};if(route.route_type==="bike"){myApp.showPreloader("조회중입니다.");Template7.module.util.findDirections(start,end,null,function(data){if(data.code===Template7.module.rest.SUCCESS_CODE){Template7.module.map.clearStoreLayer();Template7.module.map.clearBikeDrawLayer();Template7.module.util.findRouteStore(data.routeLine);Template7.module.util.showBikePath({sDistance:data.startDistance,bDistance:data.bikeDistance,eDistance:data.endDistance,startPoint:start,endPoint:end,passList:data.passList||null});myApp.hidePreloader();myApp.showTab("#mapView")}})}else{Template7.module.util.route(start,end,route.route_type,function(data){Template7.module.util.showBikePath({sDistance:data.startDistance,bDistance:data.bikeDistance,eDistance:data.endDistance,startPoint:start,endPoint:end,passList:data.passList||null});Template7.module.db.selectRoutes(function(routes){Template7.module.db.deleteRouteById(routes[0].id)});myApp.showTab("#mapView")})}})});$$(page.navbarInnerContainer).on("click","#btnDeleteRoutes",function(){myApp.confirm("길찾기 데이터를 전체 삭제하시겠습니까?",function(){Template7.module.db.deleteRoutes();refreshRouteResult()})});$$(page.container).on("swipeout:delete",".swipeout",function(){var id=$$(this).find(".db-route-item").data("id");Template7.module.db.deleteRouteById(id);refreshRouteResult()});function refreshRouteResult(){Template7.module.db.selectRoutes(function(routes){$$("#dbRouteResult ul.reoute-datas").children().remove();if(routes.length<1){$$("#dbRouteResult ul.empty-route-datas").show();$$("#dbRouteResult ul.reoute-datas").show()}else{$$("#dbRouteResult ul.empty-route-datas").hide();$$("#dbRouteResult ul.reoute-datas").show()}var html="";for(var i=0,len=routes.length;i<len;i++){var route=routes[i];var type=route.route_type;switch(type){case"bike":route.imageUrl="./images/icons/bike.png";route.title="따릉이 대여소";break;case"tour":route.imageUrl="./images/icons/photo-camera.png";route.title="관광명소";break;case"park":route.imageUrl="./images/icons/park.png";route.title="공원";break;case"nomal":default:route.imageUrl="./images/icons/route.png";route.title="길찾기";break}html+=Template7.templates.dbRouteTemplate($$.extend({},{seq:i+1},route))}$$("#dbRouteResult ul.reoute-datas").append(html)})}initMyRouteIndex()});myApp.onPageInit("trackingListIndex",function(page){$$(page.container).on("swipeout:delete",".swipeout",function(){var id=$$(this).find(".delete-tracing-item").data("id");Template7.module.db.deleteTrackingById(id);refreshTrackingResult()});$$(page.navbarInnerContainer).on("click","#btnDeleteTrackings",function(){myApp.confirm("트래킹 데이터를 전체 삭제하시겠습니까?",function(){Template7.module.db.deleteTrackings();refreshTrackingResult()})});$$(page.container).on("click",".tracking-item",function(){Template7.module.map.clearTrackingLayer();var layer=Template7.module.map.getMap().getLayersByName("bikeTracking")[0];var id=$$(this).data("id");Template7.module.db.selectTrackingById(id,function(tracking){var lineFeature=(new OpenLayers.Format.GML).read(tracking.gml);var startFeature=(new OpenLayers.Format.GML).read(tracking.start);var endFeature=(new OpenLayers.Format.GML).read(tracking.end);lineFeature[0].attributes.gml=true;layer.addFeatures([lineFeature[0],startFeature[0],endFeature[0]]);Template7.module.map.getMap().zoomToExtent(lineFeature[0].geometry.getBounds());myApp.showTab("#mapView")})});function refreshTrackingResult(){Template7.module.db.selectTrackings(function(trackings){$$("#trackingListResult").children().remove();var html="";if(trackings.length>0){for(var i=0,len=trackings.length;i<len;i++){var tracking=trackings[i];var length=Math.round(tracking.length);if(length>999){length=length/1e3+"km"}else{length+="m"}tracking.length=length;html+=Template7.templates.trackingTemplate(tracking)}$$("#trackingListResult").append(html);$$("#trackingListConteinr").show();$$("#trackingEmpty").hide()}else{$$("#trackingEmpty").show();$$("#trackingListConteinr").hide()}})}})}function initComponent(){var routeStartAutocomplete=getRouteAutocomplete("#txtStart",function(autocomplete,value){Template7.module.util.registRouteStart(value.title,{lon:value.longitude,lat:value.latitude});Template7.module.event.searchRoute(value.title)});var routeEndAutocomplete=getRouteAutocomplete("#txtEnd",function(autocomplete,value){Template7.module.util.registRouteEnd(value.title,{lon:value.longitude,lat:value.latitude});Template7.module.event.searchRoute(value.title)});var stroeSwiper=myApp.swiper(".store-swiper-container",{preloadImages:false,lazyLoading:true});stroeSwiper.on("slideChangeStart",function(e){var map=Template7.module.map.getMap();var layer=map.getLayersByName("storeLayer")[0];var features=layer.features;var feature=features[$$(".store-swiper-container")[0].swiper.activeIndex];var geometry=feature.geometry;var lonlat=new OpenLayers.LonLat(geometry.x,geometry.y);var pixcel=map.getPixelFromLonLat(lonlat);pixcel=new OpenLayers.Pixel(pixcel.x,pixcel.y+120);Template7.module.map.moveToLonLat(map.getLonLatFromPixel(pixcel),map.getZoom());if(feature.renderIntent!=="select"){Template7.module.map.getMap().getControl("selectControl").select(feature)}for(var index in features){if(feature!==features[index]){if(features[index].renderIntent==="select"){Template7.module.map.getMap().getControl("selectControl").unselect(features[index])}}}});function getRouteAutocomplete(id,onChange){return myApp.autocomplete({input:id,openIn:"dropdown",limit:20,valueProperty:"title",textProperty:"title",source:function(autocomplete,query,render){var results=[];if(query.length===0){render(results);return}autocomplete.showPreloader();Template7.module.rest.daumLocalSearch(query,function(data){var items=data.channel.item;items.forEach(function(value){if(value.address.indexOf("서울")>=0){if(value.title.indexOf(query.toLowerCase())>=0){results.push(value)}}});autocomplete.hidePreloader();render(results)})},onChange:onChange})}function initTourSearch(){Template7.module.rest.selectTourList("search",function(tours){var tourResultHtml="";for(var index in tours){var tour=tours[index];var data={image:Framework7.globals.IMAGE_URL+tour.tourImageList[0].imageName,lat:tour.y,lon:tour.x,title:tour.tourNm,tel:tour.tourTel,info:tour.tourInfo,address:tour.tourAddr};tourResultHtml+=Template7.templates["tourResultTemplate"](data)}$$("#tourSearchResult").find("ul").prepend(tourResultHtml)})}initTourSearch()}function initPage(){contentPageInit(myApp.views["contentView"]);bikePageInit(myApp.views["bikeView"]);tourPageInit(myApp.views["tourView"]);settingPageInit(myApp.views["settingView"]);function contentPageInit(page){$$(page.container).on("page:back",'.page[data-page="myRouteIndex"]',function(e){Template7.module.util.dataLabelInit()})}function tourPageInit(page){$$(page.container).on("click",".parkLocation",function(){var x=$$(this).data("x");var y=$$(this).data("y");var title=$$(this).data("title");var lonlat=new OpenLayers.LonLat(x,y);Template7.module.map.moveTo(lonlat.transform("EPSG:4326",Template7.module.map.getMap().getProjection()),18,title,{lon:x,lat:y});myApp.showTab("#mapView")});$$(page.container).on("click",".parkRoute",function(){var x=parseFloat($$(this).data("x"));var y=parseFloat($$(this).data("y"));var title=$$(this).data("title");myApp.confirm(title+"까지 가는길을 검색하겠습니까?",function(){Template7.module.rest.daumCoord2addr({lon:Framework7.globals.position.lon,lat:Framework7.globals.position.lat},function(data){var start={y:Framework7.globals.position.lat,x:Framework7.globals.position.lon,name:data.old.name+" (현재위치)"};var end={x:x,y:y,name:title+" (공원)"};Template7.module.util.route(start,end,"park",function(data){Template7.module.util.showBikePath({sDistance:data.startDistance,bDistance:data.bikeDistance,eDistance:data.endDistance,startPoint:start,endPoint:end,passList:data.passList||null});myApp.showTab("#mapView")})})})})}function bikePageInit(page){var ptrContent=$$(page.container).find(".pull-to-refresh-content");ptrContent.on("refresh",function(e){myApp.showPreloader("따릉이 정보를 갱신합니다.");Template7.module.util.updatePosition(function(){var position={lon:Framework7.globals.position.lon,lat:Framework7.globals.position.lat};Template7.module.util.refreshBikeContent(ptrContent,position,function(){Template7.module.map.clearBikeDrawLayer();myApp.pullToRefreshDone();myApp.hidePreloader()})})})}function settingPageInit(page){$$(page.container).on("page:back",'.page[data-page="visitListIndex"]',function(e){Template7.module.util.dataLabelInit()});$$(page.container).on("page:back",'.page[data-page="trackingListIndex"]',function(e){Template7.module.util.dataLabelInit()});$$(page.container).on("page:beforeanimation",'.page[data-page="visitListIndex"]',function(e){$$("#visitListResult").children().remove();Template7.module.db.selectVisits(function(visits){if(visits.length>0){myApp.showPreloader("찜 목록을 불러옵니다.");Template7.module.rest.selectTourList("all",function(tours){var tourResultHtml="";for(var visits_index=0,visits_len=visits.length;visits_index<visits_len;visits_index++){var visit=visits[visits_index];for(var tour_index=0,tour_len=tours.length;tour_index<tour_len;tour_index++){var tour=tours[tour_index];if(parseInt(tour.tourId)===visit.id){var images=[];for(var index in tour.tourImageList){var tourImage=tour.tourImageList[index];images.push(Framework7.globals.IMAGE_URL+tourImage.imageName)}var context={id:tour.tourId,name:tour.tourNm,tel:tour.tourTel,address:tour.tourAddr,info:tour.tourInfo,x:tour.x,y:tour.y,images:images,title:"찜 목록"};context=JSON.stringify(context);var data={image:images[0],name:tour.tourNm,address:tour.tourAddr,context:context,lon:tour.x,lat:tour.y,registDt:visit.regist_dt_str};tourResultHtml+=Template7.templates.tourListTemplate(data)}}}$$("#visitListResult").append(tourResultHtml);myApp.hidePreloader()})}else{$$("#visitEmpty").show()}})});$$(page.container).on("page:beforeanimation",'.page[data-page="trackingListIndex"]',function(e){$$("#trackingListResult").children().remove();Template7.module.db.selectTrackings(function(trackings){var html="";if(trackings.length>0){for(var i=0,len=trackings.length;i<len;i++){var tracking=trackings[i];var length=Math.round(tracking.length);if(length>999){length=length/1e3+"km"}else{length+="m"}tracking.length=length;html+=Template7.templates.trackingTemplate(tracking)}$$("#trackingListResult").append(html);$$("#trackingListConteinr").show()}else{$$("#trackingEmpty").show()}})})}}};Template7.module.map=function(app){var map;return{init:function(){console.log("map module init");Template7.module.util.updatePosition(function(){Template7.module.map.initMap()})},initMap:function(){var _this=this;var clickControl=new OpenLayers.Control.LongClick({longclick:function(e){var routePointLayer=map.getLayersByName("routePoint")[0];var features=routePointLayer.features;var lonlat=this.map.getLonLatFromPixel(e.xy);var feature=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat));var clickPointFeature=features[features.length-1];if(clickPointFeature&&!clickPointFeature.attributes.name){routePointLayer.removeFeatures(features[features.length-1])}var startButton={text:"출발지",lonlat:lonlat.clone().transform(this.map.projection,"EPSG:4326"),bold:Framework7.globals.directRouteStart.hasOwnProperty("x"),onClick:function(){if(Framework7.globals.directRouteStart.feature){routePointLayer.removeFeatures(Framework7.globals.directRouteStart.feature)}feature.attributes.name="출발지";var lonlat=this.lonlat;Template7.module.rest.daumCoord2addr(this.lonlat,function(data){Framework7.globals.directRouteStart={fullName:data.old.name,x:lonlat.lon,y:lonlat.lat,feature:feature};Template7.module.util.setGlobalsRouteStart({title:data.old.name,position:{lon:lonlat.lon,lat:lonlat.lat}});selectedRoutePosition()})}};var endButton={text:"도착지",lonlat:lonlat.clone().transform(this.map.projection,"EPSG:4326"),bold:Framework7.globals.directRouteEnd.hasOwnProperty("x"),onClick:function(){if(Framework7.globals.directRouteEnd.feature){routePointLayer.removeFeatures(Framework7.globals.directRouteEnd.feature)}feature.attributes.name="도착지";var lonlat=this.lonlat;Template7.module.rest.daumCoord2addr(this.lonlat,function(data){Framework7.globals.directRouteEnd={fullName:data.old.name,x:lonlat.lon,y:lonlat.lat,feature:feature};Template7.module.util.setGlobalsRouteEnd({title:data.old.name,position:{lon:lonlat.lon,lat:lonlat.lat}});selectedRoutePosition()})}};var bikeButton={text:"따릉이 보기",lonlat:lonlat.clone().transform(this.map.projection,"EPSG:4326"),onClick:function(){myApp.showPreloader("따릉이 정보를 갱신합니다.");var ptrContent=$$(myApp.views["bikeView"].container).find(".pull-to-refresh-content");var position={lon:this.lonlat.lon,lat:this.lonlat.lat};Template7.module.util.refreshBikeContent(ptrContent,position,function(){Template7.module.map.clearBikeDrawLayer();Template7.module.map.bikeDraw();myApp.hidePreloader()})}};function selectedRoutePosition(){if(Framework7.globals.directRouteStart.hasOwnProperty("x")&&Framework7.globals.directRouteEnd.hasOwnProperty("x")){var start={x:Framework7.globals.directRouteStart["x"],y:Framework7.globals.directRouteStart["y"],name:Framework7.globals.directRouteStart["fullName"]+" (출발지)"};var end={x:Framework7.globals.directRouteEnd["x"],y:Framework7.globals.directRouteEnd["y"],name:Framework7.globals.directRouteEnd["fullName"]+" (도착지)"};Template7.module.util.route(start,end,"nomal",function(data){Template7.module.util.showBikePath({sDistance:data.startDistance,bDistance:data.bikeDistance,eDistance:data.endDistance,startPoint:start,endPoint:end,passList:data.passList||null})})}}var buttons=[startButton,endButton,bikeButton,{text:"취소",color:"red",onClick:function(){var routePointLayer=map.getLayersByName("routePoint")[0];var features=routePointLayer.features;routePointLayer.removeFeatures(features[features.length-1])}}];feature.attributes.pointType="PIN";routePointLayer.addFeatures([feature]);myApp.actions(buttons)}});map=new OpenLayers.Map("map",{theme:null,controls:[new OpenLayers.Control.Attribution,new OpenLayers.Control.ScaleLine({bottomInUnits:"",bottomOutUnits:""}),new OpenLayers.Control.TouchNavigation({dragPanOptions:{enableKinetic:false}}),clickControl],ratio:1,sphericalMercator:true,projection:new OpenLayers.Projection("EPSG:900913"),units:"m",numZoomLevels:20,minZoom:6,maxResolution:156543.0339,maxExtent:new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34),zoomOut:function(){if(this.zoomTween){this.zoomTween.stop()}if(this.minZoom>=this.getZoom()){return}this.zoomTo(this.getZoom()-1)}});clickControl.activate();var vWorldStreet=new OpenLayers.Layer.XYZ("브이월드 지도",["http://xdworld.vworld.kr:8080/2d/Base/201612/${z}/${x}/${y}.png"],{attribution:'<a href="#"><img src="http://map.vworld.kr/images/maps/logo_openplatform_simple.png"></a>',sphericalMercator:true,wrapDateLine:true,numZoomLevels:20});map.addLayers([vWorldStreet]);var style=new OpenLayers.Style({},{context:{pointIndex:function(feature){return feature.attributes.pointIndex||""},name:function(feature){return feature.attributes.name||""}},rules:[new OpenLayers.Rule({filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"pointType",value:"SP"}),symbolizer:{Point:{externalGraphic:"./images/icons/start.png",graphicWidth:30,graphicHeight:39,graphicXOffset:-15,graphicYOffset:-39,labelYOffset:-8,fontSize:"14px",fontWeight:"bold",fontColor:"#3f4cb9",label:"${name}",labelOutlineWidth:2,labelOutlineColor:"white"}}}),new OpenLayers.Rule({filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"pointType",value:"EP"}),symbolizer:{Point:{externalGraphic:"./images/icons/arrival.png",graphicWidth:30,graphicHeight:39,graphicXOffset:-15,graphicYOffset:-39,labelYOffset:-8,fontSize:"14px",fontWeight:"bold",fontColor:"#3f4cb9",label:"${name}",labelOutlineWidth:2,labelOutlineColor:"white"}}}),new OpenLayers.Rule({filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"roadType",value:"bike"}),symbolizer:{Line:{strokeColor:"#3e9ff0",strokeWidth:7,strokeOpacity:.7}}}),new OpenLayers.Rule({filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"pointType",value:"PP1"}),symbolizer:{Point:{externalGraphic:"./images/icons/t1.png",graphicWidth:30,graphicHeight:39,graphicXOffset:-15,graphicYOffset:-39,labelYOffset:-8,fontSize:"14px",fontWeight:"bold",fontColor:"#3f4cb9",label:"${name}",labelOutlineWidth:2,labelOutlineColor:"white"}}}),new OpenLayers.Rule({filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"pointType",value:"PP2"}),symbolizer:{Point:{externalGraphic:"./images/icons/t2.png",graphicWidth:30,graphicHeight:39,graphicXOffset:-15,graphicYOffset:-39,labelYOffset:-8,fontSize:"14px",fontWeight:"bold",fontColor:"#3f4cb9",label:"${name}",labelOutlineWidth:2,labelOutlineColor:"white"}}}),new OpenLayers.Rule({filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:"pointType",value:"PIN"}),symbolizer:{Point:{pointRadius:18,externalGraphic:"lib/OpenLayers-ext/img/pins.png",backgroundGraphic:"lib/OpenLayers-ext/img/pinsback.png",graphicYOffset:-36,backgroundXOffset:0,backgroundYOffset:-24,graphicZIndex:11,backgroundGraphicZIndex:10,cursor:"pointer"}}}),new OpenLayers.Rule({elseFilter:true,symbolizer:{Line:{strokeColor:"#3e9ff0",strokeWidth:7,strokeOpacity:.7}}})]});var locationLayerStyle=new OpenLayers.Style({},{context:{name:function(feature){return feature.attributes.name||""}},rules:[new OpenLayers.Rule({symbolizer:{Point:{fillColor:"#ff0e2c",strokeColor:"white",strokeWidth:2,pointRadius:7,graphicName:"square",graphicZIndex:"1000"},Polygon:{fillColor:"#5ab2ff",fillOpacity:.1,strokeColor:"#5ab2ff",strokeOpacity:.4,graphicZIndex:"200"}}})]});var searchLocationLayerStyle=new OpenLayers.Style({pointRadius:18,externalGraphic:"./images/icons/map-marker.png",backgroundGraphic:"lib/OpenLayers-ext/img/pinsback.png",graphicYOffset:-36,backgroundXOffset:0,backgroundYOffset:-24,graphicZIndex:11,backgroundGraphicZIndex:10,fontSize:"14px",fontWeight:"bold",fontColor:"#1441a6",label:"${name}",labelOutlineWidth:2,labelOutlineColor:"white",labelYOffset:-8},{context:{name:function(feature){return feature.attributes.name||""}}});var bikeTracking=new OpenLayers.Layer.Vector("bikeTracking",{styleMap:new OpenLayers.StyleMap(new OpenLayers.Style({},{rules:[new OpenLayers.Rule({symbolizer:{Point:{fontSize:"14px",fontWeight:"bold",fontColor:"#1441a6",label:"${name}",labelOutlineWidth:2,labelOutlineColor:"white",labelYOffset:-16,labelAlign:"cm"},Line:{strokeColor:"#6a75ff",strokeWidth:5}}})]})),renderers:["Canvas","SVG","VML"]});var routeLine=new OpenLayers.Layer.Vector("routeLine",{styleMap:new OpenLayers.StyleMap(style),renderers:["Canvas","SVG","VML"]});var routePoint=new OpenLayers.Layer.Vector("routePoint",{styleMap:new OpenLayers.StyleMap(style),renderers:["SVG"]});var locationLayer=new OpenLayers.Layer.Vector("locationLayer",{styleMap:new OpenLayers.StyleMap(locationLayerStyle),rendererOptions:{zIndexing:true},renderers:["SVG"]});var searchLocationLayer=new OpenLayers.Layer.Vector("searchLocationLayer",{styleMap:new OpenLayers.StyleMap(searchLocationLayerStyle),renderers:["SVG"],eventListeners:{featureselected:function(data){var buttons=[{text:"출발지",onClick:function(){var lon=data.feature.attributes.lon;var lat=data.feature.attributes.lat;var title=data.feature.attributes.name;Template7.module.util.registRouteStart(title,{lon:lon,lat:lat});myApp.showTab("#contentView")}},{text:"도착지",onClick:function(){var lon=data.feature.attributes.lon;var lat=data.feature.attributes.lat;var title=data.feature.attributes.name;Template7.module.util.registRouteEnd(title,{lon:lon,lat:lat});myApp.showTab("#contentView")}},{text:"취소",color:"red"}];var layer=map.getLayersByName("searchLocationLayer")[0];var features=layer.features;for(var index in features){Template7.module.map.getMap().getControl("selectControl").unselect(features[index])}myApp.actions(buttons)}}});var storeLayer=new OpenLayers.Layer.Vector("storeLayer",{styleMap:new OpenLayers.StyleMap({default:new OpenLayers.Style({},{rules:[new OpenLayers.Rule({minScaleDenominator:800,maxScaleDenominator:14e3,symbolizer:{pointRadius:16,graphicName:"fa-blazon",backgroundGraphic:"lib/OpenLayers-ext/img/pinsback.png",fillColor:"#3b7",symbolYOffset:-18,rotation:0,faLabel:"none",faColor:"#3b7",faSize:.8,faLabel_1:"ion-android-restaurant",faColor_1:"#fff",faSize_1:.6,faColor_2:"red",faSize_2:1,strokeWidth:2,stroke:true,strokeColor:"#fff",backgroundXOffset:0,backgroundYOffset:-24,graphicZIndex:11,backgroundGraphicZIndex:10}})]}),select:new OpenLayers.Style({},{rules:[new OpenLayers.Rule({minScaleDenominator:800,maxScaleDenominator:14e3,symbolizer:{pointRadius:24,symbolYOffset:-24,backgroundYOffset:-32,fontSize:"14px",fontWeight:"bold",fontColor:"#1441a6",label:"${name}",labelYOffset:-8,labelOutlineWidth:2,labelOutlineColor:"white",graphicZIndex:2e3,backgroundGraphicZIndex:1500}})]})}),rendererOptions:{zIndexing:true},renderers:["SVG"],eventListeners:{featureselected:function(data){if($$(".picker-modal").css("display")==="none"){myApp.pickerModal(".picker-info",false)}$$(".store-swiper-container")[0].swiper.slideTo(data.feature.attributes.index)},featureunselected:function(data){var features=map.getLayersByName("storeLayer")[0].features;for(var index in features){if(features[index].renderIntent==="select"){return}}if($$(".picker-modal.modal-in").css("display")!=="none"){myApp.closeModal(".picker-modal",false)}}}});var bikeDrawLayer=new OpenLayers.Layer.Vector("bikeDrawLayer",{styleMap:new OpenLayers.StyleMap({default:new OpenLayers.Style({},{rules:[new OpenLayers.Rule({symbolizer:{pointRadius:16,graphicName:"fa-blazon",backgroundGraphic:"lib/OpenLayers-ext/img/pinsback.png",fillColor:"#4c5ebb",symbolYOffset:-18,rotation:0,faLabel:"none",faColor:"#4c5ebb",faSize:.8,faLabel_1:"ion-android-bicycle",faColor_1:"#fff",faSize_1:.6,faColor_2:"red",faSize_2:1,strokeWidth:2,stroke:true,strokeColor:"#fff",backgroundXOffset:0,backgroundYOffset:-24,graphicZIndex:11,backgroundGraphicZIndex:10}})]}),select:new OpenLayers.Style({},{rules:[new OpenLayers.Rule({symbolizer:{pointRadius:24,symbolYOffset:-24,backgroundYOffset:-32,fontSize:"14px",fontWeight:"bold",fontColor:"#1441a6",label:"${name}",labelYOffset:-8,labelOutlineWidth:2,labelOutlineColor:"white",graphicZIndex:2e3,backgroundGraphicZIndex:1e3}})]})}),rendererOptions:{zIndexing:true},renderers:["SVG"]});var visitDrawLayer=new OpenLayers.Layer.Vector("visitDrawLayer",{styleMap:new OpenLayers.StyleMap({default:new OpenLayers.Style({},{rules:[new OpenLayers.Rule({symbolizer:{pointRadius:16,graphicName:"fa-blazon",backgroundGraphic:"lib/OpenLayers-ext/img/pinsback.png",fillColor:"#bb000a",symbolYOffset:-18,rotation:0,faLabel:"none",faColor:"#bb000a",faSize:.8,faLabel_1:"ion-ios-heart",faColor_1:"#fff",faSize_1:.6,faColor_2:"red",faSize_2:1,strokeWidth:2,stroke:true,strokeColor:"#fff",backgroundXOffset:0,backgroundYOffset:-24,graphicZIndex:11,backgroundGraphicZIndex:10}})]}),select:new OpenLayers.Style({},{rules:[new OpenLayers.Rule({symbolizer:{pointRadius:24,symbolYOffset:-24,backgroundYOffset:-32,fontSize:"14px",fontWeight:"bold",fontColor:"#1441a6",label:"${name}",labelYOffset:-8,labelOutlineWidth:2,labelOutlineColor:"white"}})]})}),rendererOptions:{zIndexing:true},renderers:["SVG"]});map.addLayers([routeLine,routePoint,bikeTracking,visitDrawLayer,searchLocationLayer,locationLayer,storeLayer,bikeDrawLayer]);var lonlat=new OpenLayers.LonLat(Framework7.globals.position.lon,Framework7.globals.position.lat).transform("EPSG:4326",map.getProjection());map.setCenter(new OpenLayers.LonLat(lonlat.lon,lonlat.lat),16);map.layers[0].events.register("loadend",map.layers[0],initLoading);function initLoading(){setTimeout(function(){Template7.module.util.hideCover();Template7.module.db.selectAppInfo(function(appInfo){if(appInfo.length<1){tourguide.showTour();Template7.module.db.insertAppinfo("init App")}});Template7.module.db.selectVisits(function(visits){for(var i=0,len=visits.length;i<len;i++){Template7.module.map.addVisitFeature(visits[i])}})},1e3);var point=new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat);Template7.module.map.moveLocation(point);this.events.unregister("loadend",this,initLoading)}var bikeSelectControl=new OpenLayers.Control.SelectFeature([searchLocationLayer,visitDrawLayer,bikeDrawLayer,storeLayer],{id:"selectControl"});map.addControl(bikeSelectControl);bikeSelectControl.activate()},removeAllPopup:function(){var popups=map.popups;for(var i=popups.length-1;i>=0;i--){map.removePopup(popups[i])}},drawLoction:function(lonlat){var layer=map.getLayersByName("locationLayer")[0];layer.removeAllFeatures();var feature=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat));layer.addFeatures(feature)},moveLocation:function(point){var lonlat=new OpenLayers.LonLat(point.x,point.y);var zoom=map.getZoom();this.moveTo(lonlat,zoom)},addControl:function(control){map.addControl(control)},moveTo:function(lonlat,zoom,label,options){var layer=null;if(label){layer=map.getLayersByName("searchLocationLayer")[0]}else{layer=map.getLayersByName("locationLayer")[0]}layer.removeAllFeatures();var feature=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat));feature.attributes={name:label||""};feature.data=$$.extend({},feature.attributes);if(options){feature.attributes=$$.extend({},feature.attributes,options)}layer.addFeatures(feature);if(label){feature.bounce(OpenLayers.BounceEffect.SHAKE)}zoom=zoom||map.getZoom();map.moveTo(lonlat,zoom)},moveCurrentLocationFeature:function(lonlat){var layer=layer=map.getLayersByName("locationLayer")[0];var feature=layer.features[0];var radius=layer.features[1];var point=new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat);if(feature){feature.move(new OpenLayers.LonLat(lonlat.lon,lonlat.lat))}else{feature=new OpenLayers.Feature.Vector(point);layer.addFeatures(feature)}if(!radius){radius=new OpenLayers.Geometry.Polygon.createRegularPolygon(point,30,35,0);layer.addFeatures(new OpenLayers.Feature.Vector(radius))}else{radius.move(new OpenLayers.LonLat(lonlat.lon,lonlat.lat))}},moveToLonLat:function(lonLat,zoom){zoom=zoom||map.numZoomLevels-1;map.moveTo(lonLat,zoom)},panToLonLat:function(lonLat){map.panTo(lonLat)},activateControl:function(id){map.getControl(id).activate()},deactivateControl:function(id){map.getControl(id).deactivate()},getMap:function(){return map},clearRouteLayer:function(){map.getLayersByName("routeLine")[0].removeAllFeatures();map.getLayersByName("routePoint")[0].removeAllFeatures()},clearStoreLayer:function(){map.getLayersByName("storeLayer")[0].removeAllFeatures()},clearBikeDrawLayer:function(){Template7.module.map.getMap().getLayersByName("bikeDrawLayer")[0].removeAllFeatures()},clearLocationLayer:function(){map.getLayersByName("locationLayer")[0].removeAllFeatures()},cleanSearchLocationLayer:function(){map.getLayersByName("searchLocationLayer")[0].removeAllFeatures()},clearTrackingLayer:function(){var layer=Template7.module.map.getMap().getLayersByName("bikeTracking")[0];var features=layer.features;var deleteFeatures=[];for(var i=0,len=features.length;i<len;i++){var feature=features[i];if(feature.attributes["gml"]||feature.geometry instanceof OpenLayers.Geometry.Point){deleteFeatures.push(feature)}}layer.removeFeatures(deleteFeatures)},clearTrackingLayerNoGMLFeature:function(){var layer=Template7.module.map.getMap().getLayersByName("bikeTracking")[0];var features=layer.features;var deleteFeatures=[];for(var i=0,len=features.length;i<len;i++){var feature=features[i];if(!feature.attributes["gml"]&&feature.geometry instanceof OpenLayers.Geometry.LineString){deleteFeatures.push(feature)}}layer.removeFeatures(deleteFeatures)},setZoomLevel:function(level){var center=map.getCenter();map.setCenter(center,level)},cleanMap:function(){Template7.module.util.removePanelItem();this.clearRouteLayer();this.clearStoreLayer();this.cleanSearchLocationLayer();this.clearBikeDrawLayer();this.clearTrackingLayer();Template7.module.util.initGlobalProperty()},bikeDraw:function(){var layer=map.getLayersByName("bikeDrawLayer")[0];var features=[];$$(".bike-item").each(function(i,data){var $$a=$$(this);var lonlat=new OpenLayers.LonLat($$a.data("lon"),$$a.data("lat")).transform("EPSG:4326","EPSG:900913");var geometry=new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat);var feature=new OpenLayers.Feature.Vector(geometry);feature.attributes.name=$$a.data("station-no")+". "+$$a.data("station-name")+"\n"+"자전거 거치대: "+$$a.data("rack-tot-cnt");features.push(feature)});layer.addFeatures(features);map.zoomToExtent(getExtentByPointFeatures(features));function getExtentByPointFeatures(features){var maxX=features.reduce(function(previous,current){return previous.geometry.x>current.geometry.x?previous:current});var maxY=features.reduce(function(previous,current){return previous.geometry.y>current.geometry.y?previous:current});var minX=features.reduce(function(previous,current){return previous.geometry.x>current.geometry.x?current:previous});var minY=features.reduce(function(previous,current){return previous.geometry.y>current.geometry.y?current:previous});return new OpenLayers.Bounds(minX.geometry.x,minY.geometry.y,maxX.geometry.x,maxY.geometry.y)}},addVisitFeature:function(datas){var layer=map.getLayersByName("visitDrawLayer")[0];var lonlat=new OpenLayers.LonLat(datas.lon,datas.lat).transform("EPSG:4326","EPSG:900913");var geometry=new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat);var feature=new OpenLayers.Feature.Vector(geometry);feature.attributes.name=datas.name;feature.attributes.id=datas.id;layer.addFeatures(feature)},removeVisitFeature:function(id){var layer=map.getLayersByName("visitDrawLayer")[0];for(var i=0,len=layer.features.length;i<len;i++){var feature=layer.features[i];if(feature.attributes.id===id){layer.removeFeatures(feature);break}}}}}(myApp);Template7.module.event=function(app){var mapModule;var restModule;var utilModule;return{init:function(){console.log("event module init");mapModule=Template7.module.map;restModule=Template7.module.rest;utilModule=Template7.module.util;Template7.module.event.bind()},locationClick:function($$element){if($$element.hasClass("active")){var isTrackingChecked=$$("#checkTracking").is(":checked");if(isTrackingChecked){myApp.confirm("현재 위치를 추적중입니다. 위치추적을 종료하시겠습니까?",function(){Template7.module.util.clearWatchPosition();$$("#checkTracking").prop("checked",false);Template7.module.util.animationMarkerStop();mapModule.clearLocationLayer();$$element.removeClass("color-red");$$element.css({backgroundColor:"white"});$$element.removeClass("active");$$element.find("i").removeClass("color-white");$$element.find("i").addClass("color-pink");var $$icon=$$("#btnBikeTracking i");var bikeTrackingStart=$$icon.hasClass("ion-stop");if(bikeTrackingStart){Template7.module.util.endBikeTracking();$$icon.addClass("ion-play");$$icon.removeClass("ion-stop")}})}else{Template7.module.util.animationMarkerStop();mapModule.clearLocationLayer();$$element.removeClass("color-red");$$element.css({backgroundColor:"white"});$$element.removeClass("active");$$element.find("i").removeClass("color-white");$$element.find("i").addClass("color-pink")}}else{myApp.showPreloader("현재 위치를 확인합니다.");Template7.module.util.updatePosition(function(){var point=new OpenLayers.Geometry.Point(Framework7.globals.position.lon,Framework7.globals.position.lat);Template7.module.map.moveLocation(point.transform("EPSG:4326",Template7.module.map.getMap().getProjection()));myApp.hidePreloader()});$$element.css({backgroundColor:""});$$element.addClass("color-red");$$element.addClass("active");$$element.find("i").removeClass("color-pink")}},bind:function(){function commonEvent(){$$("#tabSettingView, #tabContentView, #tabTourView").on("click",function(){var active=$$(this).hasClass("active");if(active){var view=myApp.getCurrentView();view.back()}});$$("#mapView").on("tab:show",function(){$$(".map-speed-dial").show()});$$("#contentView").on("tab:show",function(){$$(".map-speed-dial").hide();Template7.module.util.dataLabelInit()});$$("#bikeView").on("tab:show",function(){$$(".map-speed-dial").hide();var isInit=$$(this).data("init");if(isInit){if($$(".bike-item").length<1){var ptrContent=$$(myApp.getCurrentView().container).find(".pull-to-refresh-content");myApp.showPreloader("따릉이 정보를 갱신합니다.");var position={lon:Framework7.globals.position.lon,lat:Framework7.globals.position.lat};Template7.module.util.refreshBikeContent(ptrContent,position,function(){Template7.module.map.clearBikeDrawLayer();myApp.hidePreloader()})}$$(this).data("init",false)}});$$("#tourView").on("tab:show",function(){var isInit=$$(this).data("init");if(isInit){myApp.showPreloader("관광명소 정보를 불러옵니다.");Template7.module.rest.selectTourList("all",function(tours){var tourResultHtml="";for(var index in tours){var tour=tours[index];var images=[];for(var index in tour.tourImageList){var tourImage=tour.tourImageList[index];images.push(Framework7.globals.IMAGE_URL+tourImage.imageName)}var context={id:tour.tourId,name:tour.tourNm,tel:tour.tourTel,address:tour.tourAddr,info:tour.tourInfo,x:tour.x,y:tour.y,images:images,title:"관광명소"};context=JSON.stringify(context);var data={image:images[0],name:tour.tourNm,address:tour.tourAddr,lon:tour.x,lat:tour.y,context:context};tourResultHtml+=Template7.templates.tourListTemplate(data)}$$("#tourListResult").append(tourResultHtml);myApp.hidePreloader()});$$(this).data("init",false)}$$(".map-speed-dial").hide()});$$("#settingView").on("tab:show",function(){$$(".map-speed-dial").hide();Template7.module.util.dataLabelInit()});$$("#tourListResult, #settingView").on("click",".tourLocation",function(){var lon=$$(this).data("lon");var lat=$$(this).data("lat");var name=$$(this).data("name");var lonlat=new OpenLayers.LonLat(lon,lat);Template7.module.map.moveTo(lonlat.transform("EPSG:4326",Template7.module.map.getMap().getProjection()),18,name,{lon:lon,lat:lat});myApp.showTab("#mapView")});$$("#tourListResult, #settingView").on("click",".tourRoute",function(){var $this=$$(this);var lon=$this.data("lon");var lat=$this.data("lat");var name=$this.data("name");myApp.confirm(name+"까지 가는길을 검색하겠습니까?",function(){Template7.module.rest.daumCoord2addr({lon:Framework7.globals.position.lon,lat:Framework7.globals.position.lat},function(data){var start={y:Framework7.globals.position.lat,x:Framework7.globals.position.lon,name:data.old.name+" (현재위치)"};var end={y:lat,x:lon,name:name+" (관광명소)"};Template7.module.util.route(start,end,"tour",function(data){Template7.module.util.showBikePath({sDistance:data.startDistance,bDistance:data.bikeDistance,eDistance:data.endDistance,startPoint:start,endPoint:end,passList:data.passList||null});myApp.showTab("#mapView")})})})});$$("#btnBikeTracking").on("click",function(){var $$icon=$$(this).find("i");var play=$$icon.hasClass("ion-play");if(play){if(!$$("#checkTracking").is(":checked")){myApp.alert("트래킹은 내가 지나온 길을 기록해줍니다. 시작하려면 오른쪽 상단에 있는 버튼(위치추적)을 켜주세요.");return}myApp.confirm("트래킹을 시작하시겠습니까?",function(){Template7.module.util.startBikeTracking();$$icon.removeClass("ion-play");$$icon.addClass("ion-stop")})}else{myApp.confirm("트래킹을 종료하시겠습니까?",function(){Template7.module.util.endBikeTracking();$$icon.addClass("ion-play");$$icon.removeClass("ion-stop")})}});$$("#btnDestinationSearch").on("click",function(){myApp.popup(".destination-popup")});$$("#btnCleanMap").on("click",function(){myApp.confirm("지도에 그려진 정보를 지우시겠습니까?",function(){Template7.module.map.cleanMap()})});$$("#btnCurrentLocation").on("click",function(e){Template7.module.event.locationClick($$(this))});$$(".speed-dial-buttons a").on("click",function(e){Template7.module.util.hideMapDial()});$$("#mapDial").on("click",function(){var isOpen=$$(".map-speed-dial").hasClass("speed-dial-opened");isOpen?$$("#mapOverlay").hide():$$("#mapOverlay").show()});$$("#mapOverlay").on("click",function(){Template7.module.util.hideMapDial()});$$(".enter-key-trigger").on("keyup",function(e){if(e.keyCode===Template7.module.event.ENTER_KEY){var target=$$(this).data("for");$$("#"+target).click();$$(this).blur()}});$$("#tourSearchResult").on("click",".destination-item",function(){var $this=$$(this);var lon=$this.data("lon");var lat=$this.data("lat");var title=$this.data("title");myApp.confirm(title+"까지 가는길을 검색하겠습니까?",function(){myApp.closeModal(".destination-popup");Template7.module.rest.daumCoord2addr({lon:Framework7.globals.position.lon,lat:Framework7.globals.position.lat},function(data){var start={y:Framework7.globals.position.lat,x:Framework7.globals.position.lon,name:data.old.name+" (현재위치)"};var end={y:lat,x:lon,name:title+" (관광명소)"};Template7.module.util.route(start,end,"tour",function(data){Template7.module.util.showBikePath({sDistance:data.startDistance,bDistance:data.bikeDistance,eDistance:data.endDistance,startPoint:start,endPoint:end,passList:data.passList||null})})})})});$$("#btnCloseStorePopup").on("click",function(){var map=Template7.module.map.getMap();var layer=map.getLayersByName("storeLayer")[0];var features=layer.features;for(var index in features){if(features[index].renderIntent==="select"){Template7.module.map.getMap().getControl("selectControl").unselect(features[index])}}if($$(".picker-modal.modal-in").css("display")!=="none"){myApp.closeModal(".picker-modal",false)}})}function mapViewEvent(){$$("#btnTipClose").on("click",function(){$$("#tipPanel").hide()});$$(".picker-info").on("picker:open",function(){$$(".store-swiper-container")[0].swiper.update()});$$(".picker-info").on("picker:close",function(){var map=Template7.module.map.getMap();var layer=map.getLayersByName("storeLayer")[0];var features=layer.features;for(var index in features){var feature=features[index];if(feature.renderIntent==="select"){Template7.module.map.getMap().getControl("selectControl").unselect(feature)}}});$$("#btnLeftMenu").on("click",function(){if($$(".picker-modal.modal-in").css("display")!=="none"){myApp.closeModal(".picker-modal",false)}});$$("#nearStoreList").on("click",".near-store",function(){var featureId=$$(this).data("feature-id");var map=Template7.module.map.getMap();var layer=map.getLayersByName("storeLayer")[0];var features=layer.features;var feature=null;for(var index in features){if(features[index].attributes.index===featureId){feature=features[index];break}}if(feature){myApp.closePanel();var geometry=feature.geometry;var lonlat=new OpenLayers.LonLat(geometry.x,geometry.y-60);var pixcel=map.getPixelFromLonLat(lonlat);Template7.module.map.moveToLonLat(map.getLonLatFromPixel(pixcel),18);if($$(".picker-modal").css("display")==="none"){myApp.pickerModal(".picker-info",false)}$$(".store-swiper-container")[0].swiper.slideTo(featureId);Template7.module.map.getMap().getControl("selectControl").select(feature)}});$$("#btnZoomIn").on("click",function(){Template7.module.map.getMap().zoomIn()});$$("#btnZoomOut").on("click",function(){Template7.module.map.getMap().zoomOut()});$$(".panel-left").on("panel:open",function(){$$("#mapOverlay").show()});$$(".panel-left").on("panel:close",function(){$$("#mapOverlay").hide()});$$("#routePanel").on("click",".btnRouteStart, .btnRouteEnd",function(){var lon=$$(this).data("lon");var lat=$$(this).data("lat");var point=new OpenLayers.LonLat(lon,lat).transform("EPSG:4326","EPSG:900913");Template7.module.map.moveToLonLat(point,18);myApp.closePanel()});$$("#checkTracking").on("change",function(){var checked=$$(this).is(":checked");if(!checked){var $$icon=$$("#btnBikeTracking i");var bikeTrackingStart=$$icon.hasClass("ion-stop");if(bikeTrackingStart){myApp.confirm("트래킹 기능이 켜져 있습니다. 트래킹을 종료하시겠습니까?",function(){Template7.module.util.tracking(checked);Template7.module.util.endBikeTracking();$$icon.addClass("ion-play");$$icon.removeClass("ion-stop")},function(){$$("#checkTracking").prop("checked",true)})}else{Template7.module.util.tracking(checked)}}else{Template7.module.util.tracking(checked)}})}function contentViewEvent(){$$("#btnStart").on("click",function(e){Template7.module.event.searchRoute($$("#txtStart").val())});$$("#btnEnd").on("click",function(e){Template7.module.event.searchRoute($$("#txtEnd").val())});$$("#btnRouteSearch").on("click",function(e){var start={y:Framework7.globals.routeStart["lat"],x:Framework7.globals.routeStart["lon"],name:Framework7.globals.routeStart["title"]+" (출발지)"};var end={y:Framework7.globals.routeEnd["lat"],x:Framework7.globals.routeEnd["lon"],name:Framework7.globals.routeEnd["title"]+" (도착지)"};var startName=$$("#txtStart").val().trim();var endName=$$("#txtEnd").val().trim();if(!startName){myApp.alert("출발지를 선택하지 않으셨습니다.","");return}if(!endName){myApp.alert("도착지를 선택하지 않으셨습니다.","");return}if(startName===endName){myApp.alert("출발지와 도착지가 동일하므로 길찾기를 할 수 없습니다.","");return}Template7.module.util.route(start,end,"nomal",function(data){Template7.module.util.showBikePath({sDistance:data.startDistance,bDistance:data.bikeDistance,eDistance:data.endDistance,startPoint:start,endPoint:end,passList:data.passList||null})})});$$("#routeResult").on("click",".route-start",function(e){var $$row=$$(this).parent().parent();var lon=$$row.data("lon");var lat=$$row.data("lat");var title=$$row.data("title");utilModule.registRouteStart(title,{lon:lon,lat:lat});return e.stopImmediatePropagation()});$$("#routeResult").on("click",".route-end",function(e){var $$row=$$(this).parent().parent();var lon=$$row.data("lon");var lat=$$row.data("lat");var title=$$row.data("title");utilModule.registRouteEnd(title,{lon:lon,lat:lat});return e.stopImmediatePropagation()});$$("#routeResult").on("click",".route-item",function(e){var $$this=$$(this);var lon=$$this.data("lon");var lat=$$this.data("lat");var title=$$this.data("title");var lonlat=new OpenLayers.LonLat(lon,lat);Template7.module.map.moveTo(lonlat.transform("EPSG:4326",Template7.module.map.getMap().getProjection()),18,title,{lon:lon,lat:lat});myApp.showTab("#mapView");return false});$$("#btnRouteReset").on("click",function(e){myApp.confirm("초기화 하시겠습니까?","",function(){utilModule.clearRoute()})});$$("#btnStartMyLocation").on("click",function(e){restModule.daumCoord2addr(Framework7.globals.position,function(data){utilModule.registRouteStart(data.old.name,{lon:Framework7.globals.position.lon,lat:Framework7.globals.position.lat})})});$$("#btnEndMyLocation").on("click",function(e){restModule.daumCoord2addr(Framework7.globals.position,function(data){utilModule.registRouteEnd(data.old.name,{lon:Framework7.globals.position.lon,lat:Framework7.globals.position.lat})})})}function bikeViewEvent(){$$("#btnBikeRefresh").on("click",function(e){var ptrContent=$$(myApp.getCurrentView().container).find(".pull-to-refresh-content");myApp.showPreloader("따릉이 정보를 갱신합니다.");Template7.module.util.updatePosition(function(){var position={lon:Framework7.globals.position.lon,lat:Framework7.globals.position.lat};utilModule.refreshBikeContent(ptrContent,position,function(){Template7.module.map.clearBikeDrawLayer();myApp.hidePreloader()})})});$$("#bikeResult").on("click",".bike-item",function(e){$$(".bike-item").removeClass("rsc");var $this=$$(this);var start={y:Framework7.globals.position.lat,x:Framework7.globals.position.lon,name:"start"};var end={y:$this.data("lat"),x:$this.data("lon"),name:$this.find(".item-title").text()};Template7.module.rest.daumCoord2addr({lon:start.x,lat:start.y},function(data){var routeStart={lon:start.x,lat:start.y,name:data.old.name+" (현재위치)"};Template7.module.rest.daumCoord2addr({lon:end.x,lat:end.y},function(data){var routeEnd={lon:end.x,lat:end.y,name:end.name+" (따릉이 대여소)"};Template7.module.db.insertRoute({start:routeStart,end:routeEnd,route_type:"bike"})})});myApp.showPreloader("조회중입니다.");Template7.module.util.findDirections(start,end,null,function(data){myApp.hidePreloader();if(data.code===Template7.module.rest.SUCCESS_CODE){Template7.module.map.clearStoreLayer();Template7.module.map.clearBikeDrawLayer();$this.addClass("rsc");myApp.showTab("#mapView");Template7.module.util.findRouteStore(data.routeLine);Template7.module.util.showBikePath({sDistance:data.startDistance,bDistance:data.bikeDistance,eDistance:data.endDistance,startPoint:start,endPoint:end,passList:data.passList||null})}})})}function tourViewEvent(page){$$("#tabParkList").on("tab:show",function(){myApp.showPreloader("공원 데이터를 조회중입니다.");Template7.module.rest.selectParkList(function(parks,code){$$("#parkResult").children().remove();if(code===Template7.module.rest.SUCCESS_CODE){var parkTemplate="";for(var index in parks){var park=parks[index];park.imageUrl=Framework7.globals.IMAGE_URL+"park/"+park.parkImageNm;parkTemplate+=Template7.templates.parkListTemplate(park)}$$("#parkResult").append(parkTemplate)}myApp.hidePreloader()})})}function settingViewEvent(){$$("#btnReset").on("click",function(){myApp.confirm("앱 데이터를 초기화 하시면 찜 목록, 최근이용 목록, 트래킹 데이터가 초기화 됩니다. 초기화 하시겠습니까?",function(){Template7.module.db.deleteRoutes();Template7.module.db.deleteTrackings();Template7.module.db.deleteVisits();Template7.module.util.dataLabelInit()})})}$$("#btnBikeDraw").on("click",function(){Template7.module.map.clearBikeDrawLayer();Template7.module.map.bikeDraw();myApp.showTab("#mapView")});commonEvent();mapViewEvent();contentViewEvent();bikeViewEvent();tourViewEvent();settingViewEvent()},searchRoute:function(query){utilModule.clearRouteResult();if(query){restModule.daumLocalSearch(query,function(data){var items=data.channel.item;var routeHTMl="";items.forEach(function(value){if(value.address.indexOf("서울")>=0){value.imageUrl=value.imageUrl||"./images/noimg.png";routeHTMl+=Template7.templates.routeResultTemplate(value)}});if(routeHTMl){$$("#routeResult ul").append(routeHTMl);$$(".route-empty-result").hide()}})}}}}(myApp);Template7.module.event.ENTER_KEY=13;Template7.module.rest=function(app){var DAUM_API="5c5c3245-ede6-3b05-af5a-9000475ec70c";var SERVER_URL="http://wekits.iptime.org";return{init:function(){console.log("rest module init")},daumLocalSearch:function(query,callback){$$.ajax({url:SERVER_URL+"/proxy.jsp",method:"post",dataType:"json",contentType:"application/x-www-form-urlencoded; charset=UTF-8",data:{url:"http://apis.daum.net/local/v1/search/keyword.json?apikey=55db3d92bdb23d1f59befd515e13b3ba&query="+encodeURI(query)},success:function(data){typeof callback==="function"&&callback(data,Template7.module.rest.SUCCESS_CODE)},error:function(error){typeof callback==="function"&&callback(error,Template7.module.rest.FAIL_CODE)}})},daumCoord2addr:function(position,callback){$$.ajax({url:SERVER_URL+"/proxy.jsp",method:"post",dataType:"json",contentType:"application/x-www-form-urlencoded; charset=UTF-8",data:{url:"https://apis.daum.net/local/geo/coord2detailaddr?apikey=55db3d92bdb23d1f59befd515e13b3ba&x="+position.lon+"&y="+position.lat+"&inputCoordSystem=WGS84&output=json"},success:function(data){typeof callback==="function"&&callback(data,Template7.module.rest.SUCCESS_CODE)},error:function(error){typeof callback==="function"&&callback(error,Template7.module.rest.FAIL_CODE)}})},nearBike:function(position,callback){$$.ajax({url:SERVER_URL+"/bike/selectNearBikeList",method:"post",dataType:"json",contentType:"application/x-www-form-urlencoded; charset=UTF-8",data:{currLon:Framework7.globals.position.lon,currLat:Framework7.globals.position.lat,lat:position.lat,lon:position.lon},success:function(data){typeof callback==="function"&&callback(data,Template7.module.rest.SUCCESS_CODE)},error:function(error){typeof callback==="function"&&callback(error,Template7.module.rest.FAIL_CODE)}})},selectRouteBike:function(data,callback){$$.ajax({url:SERVER_URL+"/bike/selectRouteBike",method:"post",dataType:"json",contentType:"application/x-www-form-urlencoded; charset=UTF-8",data:{bounds:data.routeBounds,start:data.startPoint,end:data.endPoint},success:function(data){typeof callback==="function"&&callback(data,Template7.module.rest.SUCCESS_CODE)},error:function(error){typeof callback==="function"&&callback(error,Template7.module.rest.FAIL_CODE)}})},selectRouteStore:function(wkt,callback){$$.ajax({url:SERVER_URL+"/store/selectRouteStore",method:"post",dataType:"json",contentType:"application/x-www-form-urlencoded; charset=UTF-8",data:{wkt:wkt},success:function(data){typeof callback==="function"&&callback(data,Template7.module.rest.SUCCESS_CODE)},error:function(error){typeof callback==="function"&&callback(error,Template7.module.rest.FAIL_CODE)}})},route:function(params,callback){var data=[];data.push("format=xml");data.push("version=1");data.push("appKey="+DAUM_API);data.push("endX="+params.endX);data.push("endY="+params.endY);data.push("startX="+params.startX);data.push("startY="+params.startY);data.push("startName="+encodeURI(params.startName));if(params.passList){data.push("passList="+params.passList.join("_"))}data.push("endName="+encodeURI(params.endName));data.push("reqCoordType=WGS84GEO");$$.ajax({url:SERVER_URL+"/proxy.jsp",method:"post",dataType:"xml",contentType:"application/x-www-form-urlencoded; charset=UTF-8",data:{url:"https://apis.skplanetx.com/tmap/routes/pedestrian?"+data.join("&")},success:function(data){typeof callback==="function"&&callback(data,Template7.module.rest.SUCCESS_CODE)},error:function(error){typeof callback==="function"&&callback("길안내를 제공하지 않는 지역입니다",Template7.module.rest.FAIL_CODE)}})},selectTourList:function(type,callback){$$.ajax({url:SERVER_URL+"/tour/selectTourList",method:"post",dataType:"json",contentType:"application/x-www-form-urlencoded; charset=UTF-8",data:{type:type},success:function(tours){typeof callback==="function"&&callback(tours,Template7.module.rest.SUCCESS_CODE)},error:function(error){typeof callback==="function"&&callback(error,Template7.module.rest.FAIL_CODE)}})},selectParkList:function(callback){$$.ajax({url:SERVER_URL+"/park/selectParkList",method:"post",dataType:"json",contentType:"application/x-www-form-urlencoded; charset=UTF-8",data:{x:Framework7.globals.position.lon,y:Framework7.globals.position.lat},success:function(parks){typeof callback==="function"&&callback(parks,Template7.module.rest.SUCCESS_CODE)},error:function(error){typeof callback==="function"&&callback(parks,Template7.module.rest.FAIL_CODE)}})}}}(myApp);Template7.module.rest.SUCCESS_CODE=0;Template7.module.rest.FAIL_CODE=1;Template7.module.util=function(app){var watchId=null;var animationMarkerIntervalId=null;var bikeTrackingIntervalId=null;var bikeTrackingPoints=[];var stopwatch=null;var geolocationOptions={maximumAge:500,timeout:1e4,enableHighAccuracy:true};return{init:function(){console.log("util module init")},clearRouteResult:function(){$$(".route-empty-result").show();$$('#routeResult ul li[class="route-result"]').remove()},clearRoute:function(){$$("#txtStart").val("");$$("#txtEnd").val("");Framework7.globals.routeStart={};Framework7.globals.routeEnd={};Template7.module.util.clearRouteResult()},refreshBikeContent:function(page,position,callback){$$(page).find("li").remove();Template7.module.rest.nearBike(position,function(bikes,code){if(code!==Template7.module.rest.FAIL_CODE){var bikeTemplate="";for(var index in bikes){var bike=bikes[index];var distance=bike["distance"];var time="(도보 "+Math.round(distance/2e3*60)+"분)";bike["distance"]=distance>999?"약 "+distance/1e3+"km"+" "+time:"약 "+distance+"m"+" "+time;bikeTemplate+=Template7.templates["bikeTemplate"](bike)}page.find("ul").prepend(bikeTemplate)}typeof callback==="function"&&callback()})},getCurrentPosition:function(callback){navigator.geolocation.getCurrentPosition(function(position){typeof callback==="function"&&callback(position)},function(error){typeof callback==="function"&&callback(0,error)},geolocationOptions)},startWatchPosition:function(callback){watchId=navigator.geolocation.watchPosition(function(position){Framework7.globals.position={lon:position.coords.longitude,lat:position.coords.latitude};typeof callback==="function"&&callback(position)},function(error){if(error.code===3){console.log(watchId);Template7.module.util.clearWatchPosition();var tracking=$$("#checkTracking").is(":checked");if(tracking){Template7.module.util.startWatchPosition(callback)}}},geolocationOptions)},moveEvent:function(e){console.log(e);var $$checkTracking=$$("#checkTracking");var isTracking=$$checkTracking.is(":checked");if(isTracking){if(!e.zoomChanged){$$checkTracking.prop("checked",false);Template7.module.util.tracking($$checkTracking.is(":checked"))}}},clearWatchPosition:function(){navigator.geolocation.clearWatch(watchId);var layer=Template7.module.map.getMap().getLayersByName("locationLayer")[0];var radius=layer.features[1];if(radius){layer.removeFeatures([radius])}},updatePosition:function(callback){Template7.module.util.getCurrentPosition(function(position,message){if(message){console.log(message);Framework7.globals.position={lon:126.978657298739,lat:37.56682663199102}}else{Framework7.globals.position={lon:position.coords.longitude,lat:position.coords.latitude}}Template7.module.rest.daumCoord2addr(Framework7.globals.position,function(data){Template7.module.util.bikeLocationChange(data.old.name)});typeof callback==="function"&&callback()})},bikeLocationChange:function(locationAddress){$$(myApp.views["bikeView"].container).find("#txtCurrentLocation").text(locationAddress)},registRouteStart:function(title,position){var routeStart=Framework7.globals.routeStart;if(routeStart.lon||routeStart.lat){myApp.confirm('출발지를 이미 선택하셨습니다. <br/>"'+title+'" 을 출발지로 변경하시겠습니까?',"",function(e){Template7.module.util.setGlobalsRouteStart({title:title,position:position});Template7.module.util.pageTop($$(".page-content",myApp.getCurrentView().container))})}else{myApp.confirm('"'+title+'"'+" 을 출발지로 선택하시겠습니까?","",function(e){Template7.module.util.setGlobalsRouteStart({title:title,position:position});Template7.module.util.pageTop($$(".page-content",myApp.getCurrentView().container))})}},registRouteEnd:function(title,position){var routeEnd=Framework7.globals.routeEnd;if(routeEnd.lon||routeEnd.lat){myApp.confirm('도착지를 이미 선택하셨습니다. <br/>"'+title+'" 을 도착지로 변경하시겠습니까?',"",function(e){Template7.module.util.setGlobalsRouteEnd({title:title,position:position});Template7.module.util.pageTop($$(".page-content",myApp.getCurrentView().container))})}else{myApp.confirm('"'+title+'"'+" 을 도착지로 선택하시겠습니까?","",function(e){Template7.module.util.setGlobalsRouteEnd({title:title,position:position});Template7.module.util.pageTop($$(".page-content",myApp.getCurrentView().container))})}},setGlobalsRouteStart:function(info){$$("#txtStart").val(info.title);Framework7.globals.routeStart["lon"]=info.position.lon;Framework7.globals.routeStart["lat"]=info.position.lat;Framework7.globals.routeStart["title"]=info.title},setGlobalsRouteEnd:function(info){$$("#txtEnd").val(info.title);Framework7.globals.routeEnd["lon"]=info.position.lon;Framework7.globals.routeEnd["lat"]=info.position.lat;Framework7.globals.routeEnd["title"]=info.title},findDirections:function(start,end,passList,callback){Template7.module.map.clearRouteLayer();var params={startName:start.name,startX:start.x,startY:start.y,endName:end.name,endX:end.x,endY:end.y,passList:passList};Template7.module.rest.route(params,function(xml,code){if(code===Template7.module.rest.SUCCESS_CODE){var format=new OpenLayers.Format.KML;var routeFeatures=format.read(xml);var startGeometry=routeFeatures[0].geometry;var endGeometry=routeFeatures[routeFeatures.length-1].geometry;var points=[],lines=[],startLines=[],endLines=[],bikeLines=[],lineString=[],distance=0,bikeDistance=0,startDistance=0,endDistance=0,routeBounds,routeLine,startPoint,endPoint,description=[];var isWaypoint=false;for(var index in routeFeatures){var feature=routeFeatures[index];if(feature.geometry instanceof OpenLayers.Geometry.Point){if(feature.attributes.pointType!=="GP"){points.push(feature)}description.push(feature.attributes.description);if(feature.attributes.pointType==="PP1"){startDistance=distance;startLines=lineString.slice();isWaypoint=true}else if(feature.attributes.pointType==="PP2"){isWaypoint=false}}else{distance+=parseInt(feature.data.distance);lines.push(feature);lineString.push(feature.geometry);if(isWaypoint){bikeLines.push(feature.geometry);bikeDistance+=parseInt(feature.data.distance);feature.attributes.roadType="bike";feature.data.roadType="bike"}}}endDistance=distance-(startDistance+bikeDistance);endLines=lineString.slice(bikeLines.length+startLines.length);var multiLineString=new OpenLayers.Geometry.MultiLineString(lineString);var polygon=new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(startGeometry.x,startGeometry.y),new OpenLayers.Geometry.Point(startGeometry.x,endGeometry.y),new OpenLayers.Geometry.Point(endGeometry.x,endGeometry.y),new OpenLayers.Geometry.Point(endGeometry.x,startGeometry.y)])]);var wktFormat=new OpenLayers.Format.WKT;routeBounds=wktFormat.write(new OpenLayers.Feature.Vector(polygon));routeLine=wktFormat.write(new OpenLayers.Feature.Vector(multiLineString));startPoint=wktFormat.write(new OpenLayers.Feature.Vector(startGeometry));endPoint=wktFormat.write(new OpenLayers.Feature.Vector(endGeometry));Template7.module.map.getMap().zoomToExtent(polygon.getBounds());Template7.module.map.setZoomLevel(Template7.module.map.getMap().getZoom()-1);var routeLineLayer=Template7.module.map.getMap().getLayersByName("routeLine")[0];var routePointLayer=Template7.module.map.getMap().getLayersByName("routePoint")[0];routeLineLayer.addFeatures(lines);routePointLayer.addFeatures(points)}else{myApp.alert(xml||"해당 경로는 길찾기를 지원하지 않습니다.","")}var callbackData={distance:distance,routeBounds:routeBounds,routeLine:routeLine,startLines:startLines,endLines:endLines,bikeLines:bikeLines,startPoint:startPoint,endPoint:endPoint,bikeDistance:bikeDistance,startDistance:startDistance,endDistance:endDistance,description:description,code:code};typeof callback==="function"&&callback(callbackData)})},route:function(start,end,route_type,callback){myApp.showPreloader("조회중입니다.");Template7.module.util.findDirections(start,end,null,function(routeData){Template7.module.map.clearStoreLayer();Template7.module.map.cleanSearchLocationLayer();if(routeData.code===Template7.module.rest.SUCCESS_CODE){Template7.module.db.insertRoute({start:{lon:start.x,lat:start.y,name:start.name},end:{lon:end.x,lat:end.y,name:end.name},route_type:route_type});myApp.hidePreloader();var bikeViewContainer=myApp.views.bikeView.container;$$(bikeViewContainer).find(".bike-item").removeClass("rsc");Template7.module.rest.selectRouteBike(routeData,function(data){if(data.length===2&&data[0].distance>250){myApp.confirm("경로에 따릉이가 있습니다. 따릉이를 이용하시겠습니까?","",function(){var startPoint=new OpenLayers.Geometry.Point(data[1].x,data[1].y).transform("EPSG:900913","EPSG:4326");var endPoint=new OpenLayers.Geometry.Point(data[0].x,data[0].y).transform("EPSG:900913","EPSG:4326");var startPointName=data[1].stationNo+"."+data[1].stationName;var endPointName=data[0].stationNo+"."+data[0].stationName;var passList=[];passList.push([startPoint.x,startPoint.y]);passList.push([endPoint.x,endPoint.y]);myApp.showPreloader("조회중입니다.");Template7.module.util.findDirections(start,end,passList,function(data){if(data.code===Template7.module.rest.SUCCESS_CODE){Template7.module.util.findRouteStore(data.routeLine);myApp.hidePreloader();myApp.showTab("#mapView");var routePointLayer=Template7.module.map.getMap().getLayersByName("routePoint")[0];var features=routePointLayer.features;for(var index in features){var feature=features[index];if(feature.attributes.pointType==="PP1"){feature.attributes.name=startPointName}else if(feature.attributes.pointType==="PP2"){feature.attributes.name=endPointName}}routePointLayer.redraw()}typeof callback==="function"&&callback($$.extend({},data,{passList:passList}))})},function(){Template7.module.util.findRouteStore(routeData.routeLine);myApp.showTab("#mapView");typeof callback==="function"&&callback(routeData)})}else{Template7.module.util.findRouteStore(routeData.routeLine);myApp.showTab("#mapView");typeof callback==="function"&&callback(routeData)}})}else{myApp.hidePreloader()}})},findRouteStore:function(line){Template7.module.rest.selectRouteStore(line,function(items){$$(".store-card-content").children().remove();var storeCardHtml="";var nearStoreHtml="";var features=[];for(var index in items){var item=items[index];item.storeInfo=item.storeInfo||"식당 정보가 없습니다.";var point=new OpenLayers.Geometry.Point(item.x,item.y);var feature=new OpenLayers.Feature.Vector(point);feature.attributes.index=index;feature.attributes.type="store";feature.attributes.name=item.storeNm;feature.attributes.imageUrl=item.storeImage||"./images/noimg.png";feature.attributes.storeAddr=item.storeAddr;feature.attributes.storeGood=item.storeGood;feature.attributes.storeInfo=item.storeInfo.trim().replace(/\n\n/g,"<br />");feature.attributes.storeTel=item.storeTel;feature.attributes.storeWayCome=item.storeWayCome;features.push(feature);storeCardHtml+=Template7.templates.storeCardTemplate(feature.attributes);nearStoreHtml+=Template7.templates.nearStoreTemplate({id:feature.attributes.index,name:feature.attributes.name})}$$(".store-card-content").append(storeCardHtml);if(nearStoreHtml){$$("#nearStoreList ul").append(nearStoreHtml);$$("#nearStoreList").show();$$("#emptyNearStoreList").hide()}else{$$("#nearStoreList").hide();$$("#emptyNearStoreList").show()}var layer=Template7.module.map.getMap().getLayersByName("storeLayer")[0];layer.addFeatures(features)})},showBikePath:function(data){this.removePanelItem();var result="",sTime="",sInfo="",bTime="",bInfo="",eTime="",eInfo="";var sDistance=data.sDistance;var bDistance=data.bDistance;var eDistance=data.eDistance;var descriptions=data.descriptions;if(bDistance!==0){sTime="<br />"+"(도보 "+Math.round(sDistance/2e3*60)+"분)";sInfo=sDistance>999?"약 "+sDistance/1e3+"km"+" "+sTime:"약 "+sDistance+"m"+" "+sTime;result=Template7.templates.routePanelTemplate({imageFirst:"./images/icons/start.png",imageSecond:"./images/icons/t1.png",info:sInfo,startLon:data.startPoint.x,startLat:data.startPoint.y,endLon:data.passList[0][0],endLat:data.passList[0][1]});bTime="<br />"+"(자전거 "+Math.round(bDistance/8e3*60)+"분)";bInfo=bDistance>999?"약 "+bDistance/1e3+"km"+" "+bTime:"약 "+bDistance+"m"+" "+bTime;result+=Template7.templates.routePanelTemplate({imageFirst:"./images/icons/t1.png",imageSecond:"./images/icons/t2.png",info:bInfo,startLon:data.passList[0][0],startLat:data.passList[0][1],endLon:data.passList[1][0],endLat:data.passList[1][1]});eTime="<br />"+"(도보 "+Math.round(eDistance/2e3*60)+"분)";eInfo=eDistance>999?"약 "+eDistance/1e3+"km"+" "+eTime:"약 "+eDistance+"m"+" "+eTime;result+=Template7.templates.routePanelTemplate({imageFirst:"./images/icons/t2.png",imageSecond:"./images/icons/arrival.png",info:eInfo,startLon:data.passList[1][0],startLat:data.passList[1][1],endLon:data.endPoint.x,endLat:data.endPoint.y})}else{eTime="<br />"+"(도보 "+Math.round(eDistance/2e3*60)+"분)";eInfo=eDistance>999?"약 "+eDistance/1e3+"km"+" "+eTime:"약 "+eDistance+"m"+" "+eTime;result+=Template7.templates.routePanelTemplate({imageFirst:"./images/icons/start.png",imageSecond:"./images/icons/arrival.png",info:eInfo,startLon:data.startPoint.x,startLat:data.startPoint.y,endLon:data.endPoint.x,endLat:data.endPoint.y})}$$("#labelTotalDistance").text(Math.round((sDistance/1e3+bDistance/1e3+eDistance/1e3)*1e3)/1e3+"km");$$("#routePanel").append(result);$$("#routeInfoPanel").show();myApp.openPanel("left")},hideCover:function(){if(navigator.splashscreen){navigator.splashscreen.hide()}},pageTop:function(page){$$(page).scrollTop(0,Math.round($$(page).scrollTop()/4))},hideMapDial:function(){$$(".map-speed-dial").removeClass("speed-dial-opened");$$("#mapOverlay").hide()},removePanelItem:function(){$$("#routePanel").children().remove();$$("#routeDescription").children().remove();$$("#nearStoreList ul").children().remove();$$("#routeInfoPanel").hide()},initGlobalProperty:function(){Framework7.globals.directRouteStart={};Framework7.globals.directRouteEnd={}},tracking:function(isChecked){if(isChecked){var isCurrentLocationActive=$$("#btnCurrentLocation").hasClass("active");if(!isCurrentLocationActive){myApp.confirm("현재 위치가 활성화 되어 있지 않습니다. 활성화하시겠습니까?",function(){Template7.module.event.locationClick($$("#btnCurrentLocation"));Template7.module.map.moveToLonLat(new OpenLayers.LonLat(Framework7.globals.position.lon,Framework7.globals.position.lat).transform("EPSG:4326","EPSG:900913"),19);animationMarkerStart();Template7.module.util.startWatchPosition(function(position,message){if(!message){console.log(position);Template7.module.map.moveCurrentLocationFeature(new OpenLayers.LonLat(position.coords.longitude,position.coords.latitude).transform("EPSG:4326","EPSG:900913"))}else{Template7.module.util.clearWatchPosition()}})},function(){$$("#checkTracking").prop("checked",false)})}else{myApp.showPreloader("현재 위치를 확인합니다.");Template7.module.util.updatePosition(function(){Template7.module.map.moveToLonLat(new OpenLayers.LonLat(Framework7.globals.position.lon,Framework7.globals.position.lat).transform("EPSG:4326","EPSG:900913"));animationMarkerStart();setTimeout(function(){myApp.hidePreloader();Template7.module.util.startWatchPosition(function(position,message){if(!message){console.log(position);Template7.module.map.moveCurrentLocationFeature(new OpenLayers.LonLat(position.coords.longitude,position.coords.latitude).transform("EPSG:4326","EPSG:900913"))}else{Template7.module.util.clearWatchPosition()}})},500)})}function animationMarkerStart(){var layer=Template7.module.map.getMap().getLayersByName("locationLayer")[0];var feature=layer.features[0];var style=$$.extend({},layer.styleMap.styles.default.rules[0].symbolizer.Point,{pointRadius:7});var rMin=7,rMax=8;var direction=1;animationMarkerIntervalId=setInterval(function(){if(feature){var radius=style.pointRadius;if(radius>rMax||radius<rMin){direction*=-1}style.pointRadius=direction+style.pointRadius*1;feature.style=style;layer.drawFeature(feature)}else{feature=layer.features[0]}},80)}}else{Template7.module.util.animationMarkerStop();Template7.module.util.clearWatchPosition()}},animationMarkerStop:function(){clearInterval(animationMarkerIntervalId);var layer=Template7.module.map.getMap().getLayersByName("locationLayer")[0];var feature=layer.features[0];var style=layer.styleMap.styles.default.rules[0].symbolizer.Point;feature.style=style;layer.drawFeature(feature)},startBikeTracking:function(){stopwatch=new Stopwatch;stopwatch.start();bikeTrackingIntervalId=setInterval(function(){console.log("bikeTracking..");var layer=Template7.module.map.getMap().getLayersByName("bikeTracking")[0];layer.data=layer.data||{};var lastPoint=bikeTrackingPoints[bikeTrackingPoints.length-1];var lonlat=new OpenLayers.LonLat(Framework7.globals.position.lon,Framework7.globals.position.lat).transform("EPSG:4326","EPSG:900913");var point=new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat);var feature=null;if(lastPoint){if(!lastPoint.equals(point)){layer.data.endPoint=point;bikeTrackingPoints.push(point)}}else{layer.data.startPoint=point;bikeTrackingPoints.push(point)}var line=new OpenLayers.Geometry.LineString(bikeTrackingPoints);var lastFeature=layer.features[layer.features.length-1];if(lastFeature){if(!lastFeature.geometry.equals(line)){feature=new OpenLayers.Feature.Vector(line);Template7.module.map.clearTrackingLayerNoGMLFeature();layer.addFeatures(feature)}}else{feature=new OpenLayers.Feature.Vector(line);Template7.module.map.clearTrackingLayerNoGMLFeature();layer.addFeatures(feature)}},1e3)},endBikeTracking:function(){clearInterval(bikeTrackingIntervalId);bikeTrackingPoints=[];stopwatch.stop();var layer=Template7.module.map.getMap().getLayersByName("bikeTracking")[0];var feature=layer.features[layer.features.length-1];var geometry=feature.geometry;var lineGML=(new OpenLayers.Format.GML).write(feature);var startFeature=new OpenLayers.Feature.Vector(layer.data.startPoint);startFeature.attributes.name="출발지";var startPointGML=(new OpenLayers.Format.GML).write(startFeature);var endFeature=new OpenLayers.Feature.Vector(layer.data.endPoint||layer.data.startPoint);endFeature.attributes.name="도착지";var endPointGML=(new OpenLayers.Format.GML).write(endFeature);Template7.module.db.insertTracking({gml:lineGML,start:startPointGML,end:endPointGML,time:stopwatch.toString(),length:geometry.getLength()});Template7.module.map.clearTrackingLayerNoGMLFeature()},dataLabelInit:function(){Template7.module.db.selectVisitCount(function(data){$$("#myVisitCountLabel").text(data.count)});Template7.module.db.selectTrackingCount(function(data){$$("#myTrackingCountLabel").text(data.count)});Template7.module.db.selectRouteCount(function(data){$$("#myRouteCountLabel").text(data.count)})}}}(myApp);Template7.module.db=function(app){var db=WebSQL("mydb");var ROUTE_DATABASE_NAME="route";var VISIT_DATABASE_NAME="visit";var APP_INFO_DATABASE_NAME="app_info";var TRACKING_DATABASE_NAME="tracking";return{init:function(){console.log("db module init");this.createDatabase()},createDatabase:function(){db.query("create table if not exists "+ROUTE_DATABASE_NAME+"("+"   id integer primary key, "+"   start_lon real, "+"   start_lat real, "+"   start_name text, "+"   end_lon real, "+"   end_lat real, "+"   end_name text,"+"   route_type text,"+"   update_dt text,"+"   regist_dt text)","create table if not exists "+APP_INFO_DATABASE_NAME+"("+"   init text primary key)","create table if not exists "+VISIT_DATABASE_NAME+"("+"   id integer primary key, "+"   lon real, "+"   lat real, "+"   name text, "+"   type text,"+"   update_dt text,"+"   regist_dt text)","create table if not exists "+TRACKING_DATABASE_NAME+"("+"   id integer primary key, "+"   gml text, "+"   start text, "+"   end text, "+"   length real, "+"   tracking_time text, "+"   update_dt text,"+"   regist_dt text)").fail(function(tx,err){console.log("데이터베이스 초기화에 실패했습니다. -> "+err.message)})},insertRoute:function(datas){db.query("insert into "+ROUTE_DATABASE_NAME+"("+"   id, "+"   start_lon, "+"   start_lat, "+"   start_name, "+"   end_lon, "+"   end_lat, "+"   end_name,"+"   route_type,"+"   regist_dt) "+" values ("+"   ( select ifnull(max(id) + 1,  1) from "+ROUTE_DATABASE_NAME+" )"+"   , ?, ?, ?, ?, ?, ?, ?,"+'   datetime(strftime("%s", "now"), "unixepoch", "localtime"))',[[datas.start.lon,datas.start.lat,datas.start.name,datas.end.lon,datas.end.lat,datas.end.name,datas.route_type]]).fail(function(tx,err){console.log(ROUTE_DATABASE_NAME+" 테이블 데이터 저장중 오류가 발생했습니다. -> "+err.message)}).done(function(){console.log(ROUTE_DATABASE_NAME+" 테이블에 정상적으로 데이터가 저장되었습니다.")})},insertTracking:function(datas){db.query("insert into "+TRACKING_DATABASE_NAME+"("+"   id, "+"   gml, "+"   start, "+"   end, "+"   length, "+"   tracking_time, "+"   regist_dt) "+" values ("+"   ( select ifnull(max(id) + 1,  1) from "+TRACKING_DATABASE_NAME+" )"+"   , ?, ?, ?, ?, ? ,"+'   datetime(strftime("%s", "now"), "unixepoch", "localtime"))',[[datas.gml,datas.start,datas.end,datas.length,datas.time]]).fail(function(tx,err){console.log(TRACKING_DATABASE_NAME+" 테이블 데이터 저장중 오류가 발생했습니다. -> "+err.message)}).done(function(){console.log(TRACKING_DATABASE_NAME+" 테이블에 정상적으로 데이터가 저장되었습니다.")})},insertVisit:function(datas,callback){db.query("insert into "+VISIT_DATABASE_NAME+"("+"   id, "+"   lon, "+"   lat, "+"   name, "+"   regist_dt) "+" values ("+"   ?, ?, ?, ?, "+'   datetime(strftime("%s", "now"), "unixepoch", "localtime"))',[[datas.id,datas.lon,datas.lat,datas.name]]).fail(function(tx,err){console.log(VISIT_DATABASE_NAME+" 테이블 데이터 저장중 오류가 발생했습니다. -> "+err.message)}).done(function(){console.log(VISIT_DATABASE_NAME+" 테이블에 정상적으로 데이터가 저장되었습니다.");Template7.module.map.addVisitFeature(datas);typeof callback==="function"&&callback()})},insertAppinfo:function(data){db.query("insert into "+APP_INFO_DATABASE_NAME+"(init) values (?)",[[data]]).fail(function(tx,err){console.log(APP_INFO_DATABASE_NAME+" 테이블 데이터 저장중 오류가 발생했습니다. -> "+err.message)}).done(function(){console.log(APP_INFO_DATABASE_NAME+" 테이블에 정상적으로 데이터가 저장되었습니다.")})},selectRouteById:function(id,callback){db.query("select id, start_lon, start_lat, start_name, end_lon, end_lat, end_name, route_type, update_dt,"+" (select "+"    case "+"    WHEN TIME = 0 THEN"+"        '바로 전'"+"    when time < 1440 then "+"        CASE WHEN TIME < 60 "+"               THEN time || '분 전'"+"               ELSE (TIMe / 60) || '시간 전'"+"           END"+"    else (TIME / 1440) || '일 전'"+"    end"+"   from (select (strftime('%s','now', 'localtime') - strftime('%s',regist_dt)) / 60 time)) as regist_dt_str "+" from "+ROUTE_DATABASE_NAME+" where id = ?",[id]).fail(function(tx,err){console.log(ROUTE_DATABASE_NAME+" 데이터 조회를 실패했습니다. -> "+err.message)}).done(function(route){typeof callback==="function"&&callback(route[0])})},selectRoutes:function(callback){db.query("select id, start_lon, start_lat, start_name, end_lon, end_lat, end_name, route_type, update_dt, "+" (select "+"    case "+"    WHEN TIME = 0 THEN"+"        '바로 전'"+"    when time < 1440 then "+"        CASE WHEN TIME < 60 "+"               THEN time || '분 전'"+"               ELSE (TIMe / 60) || '시간 전'"+"           END"+"    else (TIME / 1440) || '일 전'"+"    end"+"   from (select (strftime('%s','now', 'localtime') - strftime('%s',regist_dt)) / 60 time)) as regist_dt_str "+" from "+ROUTE_DATABASE_NAME+" order by id desc",[]).fail(function(tx,err){console.log(ROUTE_DATABASE_NAME+" 전체 데이터 조회를 실패했습니다. -> "+err.message)}).done(function(routes){typeof callback==="function"&&callback(routes)})},selectVisitById:function(id,callback){db.query("select id, lon, lat, name, type, update_dt, "+" (select "+"    case "+"    WHEN TIME = 0 THEN"+"        '바로 전'"+"    when time < 1440 then "+"        CASE WHEN TIME < 60 "+"               THEN time || '분 전'"+"               ELSE (TIMe / 60) || '시간 전'"+"           END"+"    else (TIME / 1440) || '일 전'"+"    end"+"   from (select (strftime('%s','now', 'localtime') - strftime('%s',regist_dt)) / 60 time)) as regist_dt_str "+" from "+VISIT_DATABASE_NAME+" where id = ?",[id]).fail(function(tx,err){console.log(VISIT_DATABASE_NAME+" 데이터 조회를 실패했습니다. -> "+err.message)}).done(function(visit){typeof callback==="function"&&callback(visit[0])})},selectVisits:function(callback){db.query("select id, lon, lat, name, type, update_dt, "+" (select "+"    case "+"    WHEN TIME = 0 THEN"+"        '바로 전'"+"    when time < 1440 then "+"        CASE WHEN TIME < 60 "+"               THEN time || '분 전'"+"               ELSE (TIMe / 60) || '시간 전'"+"           END"+"    else (TIME / 1440) || '일 전'"+"    end"+"   from (select (strftime('%s','now', 'localtime') - strftime('%s',regist_dt)) / 60 time)) as regist_dt_str "+" from "+VISIT_DATABASE_NAME+" order by regist_dt desc",[]).fail(function(tx,err){console.log(VISIT_DATABASE_NAME+" 전체 데이터 조회를 실패했습니다. -> "+err.message)}).done(function(visits){typeof callback==="function"&&callback(visits)})},selectTrackings:function(callback){db.query("select id, gml, start, end, length, tracking_time, "+" (select "+"    case "+"    WHEN TIME = 0 THEN"+"        '바로 전'"+"    when time < 1440 then "+"        CASE WHEN TIME < 60 "+"               THEN time || '분 전'"+"               ELSE (TIMe / 60) || '시간 전'"+"           END"+"    else (TIME / 1440) || '일 전'"+"    end"+"   from (select (strftime('%s','now', 'localtime') - strftime('%s',regist_dt)) / 60 time)) as regist_dt_str "+" from "+TRACKING_DATABASE_NAME+" order by regist_dt desc",[]).fail(function(tx,err){console.log(TRACKING_DATABASE_NAME+" 전체 데이터 조회를 실패했습니다. -> "+err.message)}).done(function(trackings){typeof callback==="function"&&callback(trackings)})},selectTrackingById:function(id,callback){db.query("select id, gml, start, end, length, tracking_time, "+" (select "+"    case "+"    WHEN TIME = 0 THEN"+"        '바로 전'"+"    when time < 1440 then "+"        CASE WHEN TIME < 60 "+"               THEN time || '분 전'"+"               ELSE (TIMe / 60) || '시간 전'"+"           END"+"    else (TIME / 1440) || '일 전'"+"    end"+"   from (select (strftime('%s','now', 'localtime') - strftime('%s',regist_dt)) / 60 time)) as regist_dt_str "+" from "+TRACKING_DATABASE_NAME+" where id = ?",[id]).fail(function(tx,err){console.log(TRACKING_DATABASE_NAME+" 데이터 조회를 실패했습니다. -> "+err.message)}).done(function(tracking){typeof callback==="function"&&callback(tracking[0])})},deleteRouteById:function(id){db.rawTx(function(tx){tx.executeSql("delete from "+ROUTE_DATABASE_NAME+" where id = ?",[id],function(tx,res){console.log(ROUTE_DATABASE_NAME+" 테이블 데이터 삭제에 성공했습니다. -> "+id)},function(tx,err){console.log(ROUTE_DATABASE_NAME+" 테이블 데이터 삭제에 실패했습니다. -> "+err.message)})})},deleteTrackingById:function(id){db.rawTx(function(tx){tx.executeSql("delete from "+TRACKING_DATABASE_NAME+" where id = ?",[id],function(tx,res){console.log(TRACKING_DATABASE_NAME+" 테이블 데이터 삭제에 성공했습니다. -> "+id)},function(tx,err){console.log(TRACKING_DATABASE_NAME+" 테이블 데이터 삭제에 실패했습니다. -> "+err.message)})})},deleteTrackings:function(){db.rawTx(function(tx){tx.executeSql("delete from "+TRACKING_DATABASE_NAME,[],function(tx,res){console.log(TRACKING_DATABASE_NAME+" 테이블 전체 데이터 삭제에 성공했습니다.")},function(tx,err){console.log(TRACKING_DATABASE_NAME+" 테이블 전체 데이터 삭제에 실패했습니다. -> "+err.message)})})},deleteRoutes:function(){db.rawTx(function(tx){tx.executeSql("delete from "+ROUTE_DATABASE_NAME,[],function(tx,res){console.log(ROUTE_DATABASE_NAME+" 테이블 전체 데이터 삭제에 성공했습니다.")},function(tx,err){console.log(ROUTE_DATABASE_NAME+" 테이블 전체 데이터 삭제에 실패했습니다. -> "+err.message)})})},deleteVisits:function(){db.rawTx(function(tx){tx.executeSql("delete from "+VISIT_DATABASE_NAME,[],function(tx,res){console.log(VISIT_DATABASE_NAME+" 테이블 전체 데이터 삭제에 성공했습니다.")},function(tx,err){console.log(VISIT_DATABASE_NAME+" 테이블 전체 데이터 삭제에 실패했습니다. -> "+err.message)})})},deleteAppInfo:function(){db.rawTx(function(tx){tx.executeSql("delete from "+APP_INFO_DATABASE_NAME,[],function(tx,res){console.log(APP_INFO_DATABASE_NAME+" 테이블 전체 데이터 삭제에 성공했습니다.")},function(tx,err){console.log(APP_INFO_DATABASE_NAME+" 테이블 전체 데이터 삭제에 실패했습니다. -> "+err.message)})})},deleteVisitById:function(id,callback){db.rawTx(function(tx){tx.executeSql("delete from "+VISIT_DATABASE_NAME+" where id = ?",[id],function(tx,res){console.log(VISIT_DATABASE_NAME+" 테이블 데이터 삭제에 성공했습니다.");Template7.module.map.removeVisitFeature(id);typeof callback==="function"&&callback()},function(tx,err){console.log(VISIT_DATABASE_NAME+" 테이블 데이터 삭제에 실패했습니다. -> "+err.message)})})},selectAppInfo:function(callback){db.query("select * from "+APP_INFO_DATABASE_NAME,[]).fail(function(tx,err){console.log(APP_INFO_DATABASE_NAME+" 데이터 조회를 실패했습니다. -> "+err.message)}).done(function(appInfo){typeof callback==="function"&&callback(appInfo)})},selectVisitCount:function(callback){db.query("select count(*) as count from "+VISIT_DATABASE_NAME,[]).fail(function(tx,err){console.log(VISIT_DATABASE_NAME+" 방문 카운트 데이터 조회를 실패했습니다. -> "+err.message)}).done(function(datas){typeof callback==="function"&&callback(datas[0])})},selectTrackingCount:function(callback){db.query("select count(*) as count from "+TRACKING_DATABASE_NAME,[]).fail(function(tx,err){console.log(TRACKING_DATABASE_NAME+" 트래킹 카운트 데이터 조회를 실패했습니다. -> "+err.message)}).done(function(datas){typeof callback==="function"&&callback(datas[0])})},selectRouteCount:function(callback){db.query("select count(*) as count from "+ROUTE_DATABASE_NAME,[]).fail(function(tx,err){console.log(ROUTE_DATABASE_NAME+" 길찾기 카운트 데이터 조회를 실패했습니다. -> "+err.message)}).done(function(datas){typeof callback==="function"&&callback(datas[0])})}}}(myApp);